{"version":3,"sources":["components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","components/Scroll.jsx","components/ErrorBoundary.jsx","containers/App.jsx","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","React","createElement","className","src","concat","alt","srcSet","CardList","robots","cardComponent","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","borderTop","height","children","ErrorBoundary","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","hasError","_inherits","_createClass","value","error","errorInfo","setState","Component","App","onSearchChange","event","searchfield","target","_this2","fetch","then","response","json","data","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Fragment"],"mappings":"yNAkBeA,EAhBF,SAAHC,GAA4B,IAAtBC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAOC,EAAEH,EAAFG,GACzB,OACIC,IAAAC,cAAA,OAAKC,UAAU,mDACXF,IAAAC,cAAA,OACIE,IAAG,wBAAAC,OAA0BL,GAC7BM,IAAI,SACJC,OAAO,KAEXN,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,SAAIH,MCMLS,EAfE,SAAHX,GAAmB,IAAbY,EAAMZ,EAANY,OACVC,EAAgBD,EAAOE,IAAI,SAACC,EAAMC,GACpC,OACIZ,IAAAC,cAACN,EAAI,CACDkB,IAAKD,EACLb,GAAIS,EAAOI,GAAGb,GACdF,KAAMW,EAAOI,GAAGf,KAChBC,MAAOU,EAAOI,GAAGd,UAK7B,OAAOE,IAAAC,cAAA,WAAMQ,ICAFK,EAbG,SAAHlB,GAAyB,IAAnBmB,EAAYnB,EAAZmB,aACjB,OACIf,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,SACIC,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCOXI,EAdA,SAACC,GACZ,OACIpB,IAAAC,cAAA,OACIoB,MAAO,CACHC,UAAW,SACXC,UAAW,kBACXC,OAAQ,UAGXJ,EAAMK,WCWJC,EApBI,SAAAC,GACf,SAAAD,EAAYN,GAAO,IAAAQ,EAEkB,OAFlBC,YAAAC,KAAAJ,IACfE,EAAAG,YAAAD,KAAAE,YAAAN,GAAAO,KAAAH,KAAMV,KACDc,MAAQ,CAAEC,UAAU,GAAQP,EAapC,OAhBcQ,YAAAV,EAAAC,GAIdU,YAAAX,EAAA,EAAAb,IAAA,oBAAAyB,MAAA,SAEiBC,EAAOC,GACrBV,KAAKW,SAAS,CAAEN,UAAU,MAE7B,CAAAtB,IAAA,SAAAyB,MAAA,WAEG,OAAIR,KAAKI,MAAMC,SACJnC,IAAAC,cAAA,UAAI,wBAER6B,KAAKV,MAAMK,aAErBC,EAhBc,CAASgB,aCoDbC,SA/CN,SAAAhB,GACL,SAAAgB,IAAc,IAAAf,EAKR,OALQC,YAAAC,KAAAa,IACVf,EAAAG,YAAAD,KAAAE,YAAAW,GAAAV,KAAAH,QAiBJc,eAAiB,SAACC,GACdjB,EAAKa,SAAS,CACVK,YAAaD,EAAME,OAAOT,SAlB9BV,EAAKM,MAAQ,CACT1B,OAAQ,GACRsC,YAAa,IACflB,EAsCL,OA5CIQ,YAAAO,EAAAhB,GAOJU,YAAAM,EAAA,EAAA9B,IAAA,oBAAAyB,MAAA,WAEmB,IAAAU,EAAAlB,KAChBmB,MAAM,8CACDC,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACG,GACHL,EAAKP,SAAS,CACVjC,OAAQ6C,QAGvB,CAAAxC,IAAA,SAAAyB,MAAA,WAQQ,IAAAgB,EAC2BxB,KAAKI,MAA7B1B,EAAM8C,EAAN9C,OAAQsC,EAAWQ,EAAXR,YACVS,EAAiB/C,EAAOgD,OAAO,SAACC,GAClC,OAAOA,EAAM5D,KAAK6D,cAAcC,SAASb,EAAYY,iBAGzD,OAAQlD,EAAOoD,OAGX5D,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,MAAIC,UAAU,MAAK,eACnBF,IAAAC,cAACa,EAAS,CAACC,aAAce,KAAKc,iBAC9B5C,IAAAC,cAACkB,EAAM,KACHnB,IAAAC,cAACyB,EAAa,KACV1B,IAAAC,cAACM,EAAQ,CAACC,OAAQ+C,OAP9BvD,IAAAC,cAAA,UAAI,kBAYX0C,EA5CI,CAASD,cCKHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAf,KAAAc,EAAAE,KAAA,UAAqBhB,KAAK,SAAAtD,GAAiD,IAA9CuE,EAAMvE,EAANuE,OAAQC,EAAMxE,EAANwE,OAAQC,EAAMzE,EAANyE,OAAQC,EAAM1E,EAAN0E,OAAQC,EAAO3E,EAAP2E,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,YCADU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACD5E,IAAAC,cAACD,IAAM6E,WAAU,KACb7E,IAAAC,cAAAD,IAAA8E,SAAA,KACI9E,IAAAC,cAAC0C,EAAG,SAQhBkB","file":"static/js/main.ee3888eb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow5'>\r\n            <img\r\n                src={`https://robohash.org/${id}`}\r\n                alt='robots'\r\n                srcSet=''\r\n            />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardComponent = robots.map((user, i) => {\r\n        return (\r\n            <Card\r\n                key={i}\r\n                id={robots[i].id}\r\n                name={robots[i].name}\r\n                email={robots[i].email}\r\n            />\r\n        );\r\n    });\r\n\r\n    return <div>{cardComponent}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa3'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                overflowY: \"scroll\",\r\n                borderTop: \"5px solid black\",\r\n                height: \"500px\",\r\n            }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({ hasError: true });\r\n    \r\n    }\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Something went wrong</h1>;\r\n        }\r\n        return this.props.children;\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport \"../Css/app.css\";\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({\r\n                    robots: data,\r\n                });\r\n            });\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({\r\n            searchfield: event.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter((robot) => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n\r\n        return !robots.length ? (\r\n            <h1>Loading...</h1>\r\n        ) : (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"../src/Css/index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <React.StrictMode>\n        <>\n            <App />\n        </>\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}